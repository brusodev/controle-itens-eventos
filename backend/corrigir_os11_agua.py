import sqlite3

conn = sqlite3.connect('instance/controle_itens.db')
cursor = conn.cursor()

print("="*80)
print("üîß CORRE√á√ÉO COMPLETA DA O.S. 11/2025")
print("="*80)

# Buscar item √Ågua 500ml (item correto que o usu√°rio selecionou)
cursor.execute("""
    SELECT id, item_codigo, descricao, categoria_id
    FROM itens
    WHERE descricao LIKE '%gua%500%'
""")
agua_item = cursor.fetchone()

print(f"\nüì¶ Item CORRETO que voc√™ selecionou:")
print(f"   ID: {agua_item[0]}")
print(f"   C√≥digo: {agua_item[1]}")
print(f"   Descri√ß√£o: {agua_item[2]}")

# Buscar natureza BEC
cursor.execute("SELECT natureza FROM categorias WHERE id = ?", (agua_item[3],))
natureza = cursor.fetchone()[0]
print(f"   Natureza BEC: {natureza}")

# Estado ATUAL da O.S.
cursor.execute("""
    SELECT item_id, descricao, item_bec, quantidade_total
    FROM itens_ordem_servico
    WHERE ordem_servico_id = (SELECT id FROM ordens_servico WHERE numero_os = '11/2025')
""")
estado_atual = cursor.fetchone()

print(f"\nüìã Estado ATUAL da O.S. 11:")
print(f"   item_id: {estado_atual[0]}")
print(f"   descri√ß√£o: {estado_atual[1]}")
print(f"   item_bec: {estado_atual[2]}")
print(f"   quantidade: {estado_atual[3]}")

print("\n" + "="*80)
print("‚ö†Ô∏è  PROBLEMA IDENTIFICADO:")
print("="*80)
print("Voc√™ selecionou '√Ågua mineral 500ml' no frontend, mas o sistema salvou:")
print(f"  - item_id = 2 (Coffee Break) ‚ùå")
print(f"  - Deveria ser item_id = {agua_item[0]} (√Ågua 500ml) ‚úÖ")

print("\nüîÑ INICIANDO CORRE√á√ÉO COMPLETA...")
print("   1. Reverter movimenta√ß√£o de estoque do Coffee Break")
print("   2. Atualizar item_id para √Ågua 500ml")
print("   3. Criar nova movimenta√ß√£o para √Ågua 500ml")

# 1. Reverter estoque do Coffee Break (item_id=2, regi√£o 2)
print("\n[1/3] Revertendo abatimento do Coffee Break...")
cursor.execute("""
    UPDATE estoque_regional
    SET quantidade_gasto = '0'
    WHERE item_id = 2 AND regiao_numero = 2
""")
print("   ‚úÖ Coffee Break voltou ao estoque inicial")

# 2. Deletar movimenta√ß√£o antiga
cursor.execute("""
    DELETE FROM movimentacoes_estoque
    WHERE ordem_servico_id = (SELECT id FROM ordens_servico WHERE numero_os = '11/2025')
""")
print("   ‚úÖ Movimenta√ß√£o antiga removida")

# 3. Atualizar item_id na O.S.
print("\n[2/3] Atualizando item_id para √Ågua 500ml...")
cursor.execute("""
    UPDATE itens_ordem_servico
    SET item_id = ?,
        descricao = ?,
        item_bec = ?
    WHERE ordem_servico_id = (SELECT id FROM ordens_servico WHERE numero_os = '11/2025')
""", (agua_item[0], agua_item[2], natureza))
print(f"   ‚úÖ item_id atualizado: {estado_atual[0]} ‚Üí {agua_item[0]}")

# 4. Abater estoque da √Ågua 500ml (regi√£o 2)
print("\n[3/3] Abatendo estoque de √Ågua 500ml...")
cursor.execute("""
    UPDATE estoque_regional
    SET quantidade_gasto = '300,00'
    WHERE item_id = ? AND regiao_numero = 2
""", (agua_item[0],))

# 5. Criar movimenta√ß√£o para √Ågua 500ml
cursor.execute("""
    SELECT id FROM estoque_regional
    WHERE item_id = ? AND regiao_numero = 2
""", (agua_item[0],))
estoque_id = cursor.fetchone()[0]

cursor.execute("""
    INSERT INTO movimentacoes_estoque 
    (ordem_servico_id, item_id, estoque_regional_id, quantidade, tipo, observacao)
    VALUES (
        (SELECT id FROM ordens_servico WHERE numero_os = '11/2025'),
        ?,
        ?,
        300.0,
        'SAIDA',
        'Emiss√£o O.S. 11/2025'
    )
""", (agua_item[0], estoque_id))

print("   ‚úÖ Estoque de √Ågua 500ml abatido")
print("   ‚úÖ Movimenta√ß√£o registrada")

conn.commit()

# Verifica√ß√£o final
print("\n" + "="*80)
print("‚úÖ VERIFICA√á√ÉO FINAL")
print("="*80)

cursor.execute("""
    SELECT ios.item_id, i.descricao, ios.item_bec, ios.quantidade_total
    FROM itens_ordem_servico ios
    JOIN itens i ON i.id = ios.item_id
    WHERE ios.ordem_servico_id = (SELECT id FROM ordens_servico WHERE numero_os = '11/2025')
""")
novo_estado = cursor.fetchone()

print(f"\nüìã O.S. 11/2025 AGORA:")
print(f"   item_id: {novo_estado[0]} (√Ågua 500ml) ‚úÖ")
print(f"   Descri√ß√£o: {novo_estado[1]} ‚úÖ")
print(f"   Item BEC: {novo_estado[2]} (Natureza da despesa)")
print(f"   Quantidade: {novo_estado[3]}")

# Verificar estoques
print(f"\nüì¶ ESTOQUE Coffee Break Tipo 2 (regi√£o 2):")
cursor.execute("""
    SELECT quantidade_inicial, quantidade_gasto
    FROM estoque_regional
    WHERE item_id = 2 AND regiao_numero = 2
""")
estoque_coffee = cursor.fetchone()
print(f"   Inicial: {estoque_coffee[0]}")
print(f"   Gasto: {estoque_coffee[1]}")
print(f"   Dispon√≠vel: {float(estoque_coffee[0]) - float(estoque_coffee[1].replace(',', '.'))} ‚úÖ")

print(f"\nüì¶ ESTOQUE √Ågua 500ml (regi√£o 2):")
cursor.execute("""
    SELECT quantidade_inicial, quantidade_gasto
    FROM estoque_regional
    WHERE item_id = ? AND regiao_numero = 2
""", (agua_item[0],))
estoque_agua = cursor.fetchone()
print(f"   Inicial: {estoque_agua[0]}")
print(f"   Gasto: {estoque_agua[1]}")
disp_agua = float(estoque_agua[0].replace('.', '').replace(',', '.')) - float(estoque_agua[1].replace(',', '.'))
print(f"   Dispon√≠vel: {disp_agua:.0f} ‚úÖ")

conn.close()

print("\n" + "="*80)
print("‚úÖ CORRE√á√ÉO COMPLETA FINALIZADA!")
print("="*80)
print("\nAgora:")
print("  1. O PDF vai mostrar '√Ågua mineral em garrafas de 500 ml' ‚úÖ")
print("  2. O estoque de √Ågua 500ml foi abatido corretamente ‚úÖ")
print("  3. O Coffee Break voltou ao estoque inicial ‚úÖ")
print("\nPr√≥ximo: Vou investigar o bug do frontend que salvou o item_id errado.")
print("="*80)
